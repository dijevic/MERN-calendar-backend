{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/parseDate.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/ui/Loader.js","components/auth/Login.js","components/ui/Navbar.js","helpers/messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModalEvent.js","components/calendar/CalendarModal.js","components/ui/AddnewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/publicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithNotToken","data","method","endPoind","url","fetch","body","JSON","stringify","headers","fetchWithToken","token","localStorage","getItem","types","parseDate","events","map","e","end","moment","toDate","start","loadEvents","type","payload","eventAddNew","event","unSetActiveEvent","eventUpdated","eventDeleted","unSetSelectedSlot","login","usuario","finishChecking","startLogOut","dispatch","clear","removeItem","logOut","UseForm","initialState","useState","stateValues","setstateValues","resetState","handleInputChange","target","name","value","Spinner","className","color","height","width","Login","useDispatch","tokenEnded","setTokenEnded","checking","useSelector","state","auth","useEffect","setTimeout","LoginEmail","loginPassword","stateLoginValues","handleLoginChange","registerEmail","registerPassword","registerPassword2","registerName","stateRegisterValues","handleRegisterChange","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","id","userId","Swal","fire","console","log","placeholder","onChange","validator","isEmail","isEmpty","equals","toString","msg","Navbar","user","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","actionOpenModal","actionCloseModal","startDateDefault","minutes","seconds","add","endDateDefault","initialStateForm","notes","CalendarModalEvent","calendar","activeEvent","onSlotSelected","startOnSelected","endOnSelected","startDate","setstartDate","endDate","setEndDate","titleValid","setTitleValid","validDate","setValidDate","formValues","setFormValues","startDateMoment","endDateMoment","isSameOrAfter","icon","text","length","isBefore","uid","getState","newEvent","starAddNewEvent","minDate","autoComplete","rows","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","CalendarModal","modalOpen","ui","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","AddnewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","eventsParsed","eventos","view","setview","startAccessor","endAccessor","eventPropGetter","backgroundColor","_id","borderRadius","opacity","onView","onDoubleClickEvent","onSelectEvent","onSelectSlot","setSelectedSlot","selectable","components","PrivateRoute","Component","component","isAuth","rest","props","to","PublicRoute","AppRouter","path","exact","uiError","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c48592b.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithNotToken = (data, method = 'GET', endPoind) => {\r\n    const url = `${baseUrl}${endPoind}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    }\r\n\r\n    return fetch(url, {\r\n        method,\r\n        body: JSON.stringify(data),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n}\r\nexport const fetchWithToken = (data, method = 'GET', endPoind) => {\r\n    const url = `${baseUrl}${endPoind}`\r\n    const token = localStorage.getItem('token') || ''\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    }\r\n\r\n    return fetch(url, {\r\n        method,\r\n        body: JSON.stringify(data),\r\n        headers: { 'Content-Type': 'application/json', 'x-token': token }\r\n    })\r\n}","export const types = {\r\n    modalOpen: `[ui] modal open`,\r\n    modalClose: `[ui] modal close`,\r\n\r\n    eventStartAddNewEvent: `[ui] event start add new event`,\r\n    eventLoadEvents: `[ui] event load events`,\r\n    eventAddNew: `[Calendar] event add new`,\r\n    setActiveEvent: `[Calendar] set active`,\r\n    unSetActiveEvent: `[Calendar] unset active`,\r\n    calendarCleaner: `[Calendar] clean calendar`,\r\n\r\n    eventUpdate: `[Calendar] event update`,\r\n    eventDelete: `[Calendar] event delete`,\r\n\r\n    onselectSlot: `[Calendar] event onSlot selected`,\r\n    unSetOnselectSlot: `[Calendar] event onSlot unselected`,\r\n\r\n    authSetChecking: `[Calendar] auth set checking`,\r\n    authUnSetChecking: `[Calendar] auth Unset checking`,\r\n    authStartLogin: `[Calendar] auth start login`,\r\n    authLogin: `[Calendar] auth  login`,\r\n    authStartRegister: `[Calendar] auth start register`,\r\n    authRegister: `[Calendar] auth  register`,\r\n    authLogOut: `[Calendar] auth log out`,\r\n    authStartRenewalToken: `[Calendar] auth  renew token`,\r\n\r\n    authUiError: `[ui][auth] error`,\r\n}","import moment from 'moment'\r\n\r\nexport const parseDate = (events = []) => {\r\n\r\n    return events.map(e => {\r\n\r\n        return {\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        }\r\n    })\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { parseDate } from \"../helpers/parseDate\";\r\n\r\n\r\n\r\n\r\nexport const starAddNewEvent = (event) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { user } = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken(event, 'POST', 'events')\r\n            const data = await resp.json()\r\n\r\n            if (data.ok) {\r\n                event.usuario = user;\r\n                event.uid = data.newEvent.uid;\r\n                dispatch(eventAddNew(event))\r\n                console.log(event)\r\n\r\n            } else {\r\n                Swal.fire('error', `error creando el evento`, 'error')\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}\r\n// eventLoadEvents\r\n\r\nexport const loadEventsStarter = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(false, 'GET', 'events')\r\n            const data = await resp.json()\r\n\r\n            if (data.ok) {\r\n                const eventsParsed = parseDate(data.eventos)\r\n                dispatch(loadEvents(eventsParsed))\r\n\r\n            } else {\r\n                Swal.fire('error', `error creando el evento`, 'error')\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startEventUpdate = (event) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(event, 'PUT', `events/${event.uid}`)\r\n            const data = await resp.json()\r\n\r\n            if (data.ok) {\r\n\r\n                dispatch(eventUpdated(event))\r\n\r\n            } else {\r\n                Swal.fire('error', data.msg, 'error')\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleteEvent = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().calendar.activeEvent\r\n\r\n        try {\r\n            const resp = await fetchWithToken({}, 'DELETE', `events/${uid}`)\r\n            const data = await resp.json()\r\n            if (data.ok) {\r\n\r\n                dispatch(eventDeleted())\r\n\r\n            } else {\r\n                Swal.fire('error', data.msg, 'error')\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst loadEvents = (events) => ({\r\n    type: types.eventLoadEvents,\r\n    payload: events\r\n\r\n})\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\nexport const eventSetActive = (event) => ({\r\n    type: types.setActiveEvent,\r\n    payload: event\r\n})\r\n\r\nexport const unSetActiveEvent = () => ({\r\n    type: types.unSetActiveEvent\r\n})\r\n\r\nexport const eventUpdated = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\nconst eventDeleted = () => ({\r\n    type: types.eventDelete\r\n})\r\n\r\nexport const setSelectedSlot = ({ start, end }) => ({\r\n    type: types.onselectSlot,\r\n    payload: { start, end }\r\n})\r\nexport const unSetSelectedSlot = () => ({\r\n    type: types.unSetOnselectSlot\r\n})\r\n\r\nexport const cleanCalendar = () => ({ type: types.calendarCleaner })","import Swal from \"sweetalert2\"\r\nimport { fetchWithNotToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { cleanCalendar } from \"./events\"\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithNotToken({ email, password }, 'POST', 'auth')\r\n            const data = await resp.json()\r\n\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token)\r\n                localStorage.setItem('tokenDateStart', new Date().getTime())\r\n                const usuario = {\r\n                    id: data.userId,\r\n                    name: data.name\r\n                }\r\n                dispatch(login(usuario))\r\n            } else {\r\n                Swal.fire('Error en el login :(', 'error en el password o email', 'error')\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n\r\n            const resp = await fetchWithNotToken({ email, password, name }, 'POST', 'auth/register')\r\n            const data = await resp.json()\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token)\r\n\r\n                localStorage.setItem('tokenDateStart', new Date().getTime())\r\n                const usuario = {\r\n                    id: data.userId,\r\n                    name: data.name\r\n                }\r\n                dispatch(login(usuario))\r\n            } else {\r\n                Swal.fire('Error en el registro :(', data.msg, 'error')\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst login = (usuario) => ({\r\n    type: types.authLogin,\r\n    payload: { ...usuario }\r\n})\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(false, 'GET', 'auth/renew')\r\n            const data = await resp.json()\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token)\r\n                localStorage.setItem('tokenDateStart', new Date().getTime())\r\n                const usuario = {\r\n                    id: data.userId,\r\n                    name: data.name\r\n                }\r\n                dispatch(login(usuario))\r\n\r\n            } else {\r\n                console.log(data)\r\n                dispatch(finishChecking())\r\n                // lanzar mensaje\r\n            }\r\n\r\n\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const finishChecking = () => ({ type: types.authUnSetChecking })\r\n\r\n\r\n\r\nexport const startLogOut = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear()\r\n        localStorage.removeItem('token')\r\n        dispatch(cleanCalendar())\r\n        dispatch(logOut())\r\n    }\r\n\r\n}\r\n\r\nconst logOut = () => ({ type: types.authLogOut })\r\n\r\n\r\n\r\n\r\n","import { useState } from 'react'\r\n\r\nexport const UseForm = (initialState = {}) => {\r\n    const [stateValues, setstateValues] = useState(initialState)\r\n\r\n\r\n    const resetState = () => {\r\n        setstateValues(initialState)\r\n    }\r\n    // evento para manejar los camabios en un input\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setstateValues({\r\n            ...stateValues,\r\n            [target.name]: target.value\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n    return [stateValues, handleInputChange, resetState]\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <Loader\r\n                type=\"Bars\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n            // timeout={20000} //3 secs\r\n            />\r\n\r\n            <span className=\"loader__span\"> Loading... </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport validator from 'validator'\r\n// import moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { UseForm } from '../../hooks/useForm';\r\n\r\nimport './login.css';\r\nimport Swal from 'sweetalert2';\r\nimport { Spinner } from '../ui/Loader';\r\n\r\nexport const Login = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [tokenEnded, setTokenEnded] = useState(false)\r\n    const { checking } = useSelector(state => state.auth)\r\n    const initialoginState = {\r\n        LoginEmail: '',\r\n        loginPassword: ''\r\n    }\r\n    const initialRegisterState = {\r\n        registerEmail: '',\r\n        registerPassword: '',\r\n        registerPassword2: '',\r\n        registerName: '',\r\n    }\r\n\r\n    // variables de Datetoken y manejo del  vencimiento\r\n    // const tokenDate = JSON.parse(localStorage.getItem('tokenDateStart'))\r\n    // const tokenDateEnding = moment(tokenDate).add(2, 'hours')\r\n    // const today = moment().toDate()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem('tokenDateStart')) {\r\n            setTokenEnded(true)\r\n            localStorage.clear()\r\n            setTimeout(() => {\r\n                setTokenEnded(false)\r\n            }, 3000);\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const [stateLoginValues, handleLoginChange] = UseForm(initialoginState)\r\n    const [stateRegisterValues, handleRegisterChange] = UseForm(initialRegisterState)\r\n\r\n    const { LoginEmail, loginPassword } = stateLoginValues\r\n\r\n    const { registerEmail, registerPassword, registerPassword2, registerName } = stateRegisterValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        // ca hago mi login \r\n        dispatch(startLogin(LoginEmail, loginPassword))\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n\r\n        if (!validator.isEmail(registerEmail)) {\r\n            return Swal.fire('error', 'email invalido', 'error')\r\n        }\r\n\r\n        if (validator.isEmpty(registerPassword) || validator.isEmpty(registerPassword2 || validator.isEmpty(registerName))) {\r\n\r\n            return Swal.fire('error', 'campos no pueden estar vacios', 'error')\r\n        }\r\n\r\n        if (!validator.equals(registerPassword.toString(), registerPassword2.toString())) {\r\n            return Swal.fire('error', 'las contraseñas deben de ser iguales', 'error')\r\n        }\r\n\r\n\r\n        // TODO:distpach de registro\r\n        dispatch(startRegister(registerEmail, registerPassword, registerName))\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    if (checking) {\r\n        return (<Spinner />)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container login-container\">\r\n\r\n            {\r\n                tokenEnded && <p className=\"tokenEndedText\">Sesion vencida por falta de actividad</p>\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"LoginEmail\"\r\n                                value={LoginEmail}\r\n                                onChange={handleLoginChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword\"\r\n                                value={registerPassword}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth.user)\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(startLogOut())\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark mb-4\">\r\n\r\n                <span className=\"navbar-brand\">{name}</span>\r\n\r\n                <button\r\n                    onClick={handleLogOut}\r\n                    className=\"btn btn-outline-danger\">\r\n\r\n                    <i className=\"fa fa-sign-out-alt\"> </i>\r\n                    <span>Salir</span>\r\n                </button>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { usuario, title } = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> <br />\r\n            <span>{usuario.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const actionOpenModal = () => {\r\n    return {\r\n        type: types.modalOpen\r\n    }\r\n}\r\nexport const actionCloseModal = () => {\r\n    return {\r\n        type: types.modalClose\r\n    }\r\n}\r\n\r\nexport const actionSetError = (msg) => ({\r\n    type: types.authUiError,\r\n    payload: msg\r\n})","import React, { useEffect, useState } from 'react'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actionCloseModal } from '../../actions/ui';\r\nimport { starAddNewEvent, startEventUpdate, unSetActiveEvent, unSetSelectedSlot } from '../../actions/events';\r\n\r\n\r\nlet startDateDefault = moment().minutes(0).seconds(0).add(1, 'hours').toDate()\r\nlet endDateDefault = moment().minutes(0).seconds(0).add(2, 'hours').toDate()\r\nconst today = moment().toDate()\r\n\r\n\r\nconst initialStateForm = {\r\n    title: '',\r\n    notes: '',\r\n    start: startDateDefault,\r\n    end: endDateDefault\r\n}\r\n\r\nexport const CalendarModalEvent = () => {\r\n\r\n\r\n\r\n\r\n    const { activeEvent, onSlotSelected } = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch()\r\n\r\n    const { start: startOnSelected, end: endOnSelected } = onSlotSelected\r\n\r\n\r\n    const [startDate, setstartDate] = useState(startDateDefault)\r\n    const [endDate, setEndDate] = useState(endDateDefault)\r\n    const [titleValid, setTitleValid] = useState(true)\r\n    const [validDate, setValidDate] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initialStateForm)\r\n\r\n\r\n    // uso el efecto para setear a mi form y a mi fecha los valores correspondientes\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n            setstartDate(activeEvent.start)\r\n            setEndDate(activeEvent.end)\r\n\r\n        } else {\r\n            setFormValues(initialStateForm)\r\n            setstartDate(startDateDefault)\r\n            setEndDate(endDateDefault)\r\n\r\n        }\r\n        if (startOnSelected) {\r\n            setstartDate(startOnSelected)\r\n            setEndDate(endOnSelected)\r\n\r\n            setFormValues((e) => {\r\n                return {\r\n                    ...e,\r\n                    start: startOnSelected,\r\n                    end: endOnSelected\r\n                }\r\n            })\r\n\r\n        } else if (!activeEvent && !onSlotSelected) {\r\n            setFormValues(initialStateForm)\r\n            setstartDate(startDateDefault)\r\n            setEndDate(endDateDefault)\r\n        }\r\n\r\n\r\n    }, [activeEvent, startOnSelected, endOnSelected, onSlotSelected])\r\n\r\n\r\n\r\n\r\n    const { title, notes, start, end } = formValues\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n\r\n        setstartDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setEndDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        const startDateMoment = moment(start)\r\n        const endDateMoment = moment(end)\r\n\r\n        if (startDateMoment.isSameOrAfter(endDateMoment)) {\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'the date of starting and finishing must be diferent',\r\n\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (title.length <= 2) {\r\n            return setTitleValid(false)\r\n        }\r\n        if (startDateMoment.isBefore(today)) {\r\n\r\n            return setValidDate(false)\r\n        }\r\n\r\n\r\n        setTitleValid(true)\r\n        setValidDate(true)\r\n        setFormValues(initialStateForm)\r\n\r\n        dispatch(actionCloseModal())\r\n        dispatch(unSetSelectedSlot())\r\n        dispatch(unSetActiveEvent())\r\n\r\n        if (activeEvent) {\r\n            dispatch(startEventUpdate(formValues))\r\n        } else {\r\n            dispatch(starAddNewEvent(formValues))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{(!activeEvent) ? `Nuevo evento` : `Editar evento`}</h1>\r\n            <hr />\r\n            <form onSubmit={handleFormSubmit} className=\"container \">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={startDate}\r\n                        className={`form-control ${!validDate && 'is-invalid'} `}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { unSetActiveEvent, unSetSelectedSlot } from '../../actions/events';\r\nimport { actionCloseModal } from '../../actions/ui';\r\n\r\nimport { CalendarModalEvent } from './CalendarModalEvent'\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nexport const CalendarModal = () => {\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const dispatch = useDispatch()\r\n\r\n    const closeModal = () => {\r\n        dispatch(actionCloseModal())\r\n        dispatch(unSetActiveEvent())\r\n        dispatch(unSetSelectedSlot())\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                className=\"modal\"\r\n                closeTimeoutMS={200}\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <CalendarModalEvent />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actionOpenModal } from '../../actions/ui'\r\n\r\nexport const AddnewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleNewEvent = () => {\r\n        dispatch(actionOpenModal())\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleNewEvent}\r\n        >\r\n            <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startDeleteEvent } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEventDelete = () => {\r\n        dispatch(startDeleteEvent())\r\n    }\r\n    return (\r\n        <button\r\n            onClick={handleEventDelete}\r\n            className=\"btn btn-danger fab-danger\">\r\n\r\n            <i className=\"fa fa-trash mr-2\">\r\n\r\n            </i>\r\n\r\n            Borrar evento\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/messages'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actionOpenModal } from '../../actions/ui'\r\nimport { eventSetActive, unSetActiveEvent, setSelectedSlot, loadEventsStarter } from '../../actions/events'\r\nimport { AddnewFab } from '../ui/AddnewFab'\r\nimport { useSelector } from 'react-redux'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es')\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { id } = useSelector(state => state.auth.user)\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            dispatch(loadEventsStarter())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const { events } = useSelector(state => state.calendar)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n\r\n    const [view, setview] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(actionOpenModal())\r\n\r\n    }\r\n    const onViewChange = (e) => {\r\n        setview(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch(eventSetActive(e))\r\n\r\n        // console.log(e)\r\n    }\r\n    const onSelectSlot = (e) => {\r\n\r\n        dispatch(unSetActiveEvent())\r\n        dispatch(actionOpenModal())\r\n        dispatch(setSelectedSlot(e))\r\n        // console.log(e)\r\n    }\r\n    const eventStyleGetter = (e) => {\r\n\r\n        const style = {\r\n            backgroundColor: (id === e.usuario._id || id === e.usuario.id) ? '#367cf7' : '#00112c',\r\n            borderRadius: '0px',\r\n            color: '#fff',\r\n            opacity: '0.8'\r\n        }\r\n        return { style }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"calendar-container\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onView={onViewChange}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                view={view}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal />\r\n\r\n            <AddnewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({ component: Component, isAuth, ...rest }) => {\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n\r\n            (isAuth)\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/login\" />\r\n        )\r\n        } />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({ component: Component, isAuth, ...rest }) => {\r\n\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n\r\n            (isAuth)\r\n                ? <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n        )\r\n        } />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n\r\n} from \"react-router-dom\";\r\n\r\nimport { finishChecking, startChecking } from '../actions/auth';\r\nimport { Login } from \"../components/auth/Login\";\r\n\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { Spinner } from '../components/ui/Loader';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './publicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const { checking, user } = useSelector(state => state.auth)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // error cuando estoy en el login sino coloco este if me deja entrar de n uevo\r\n        if (localStorage.getItem('token')) {\r\n\r\n            dispatch(startChecking())\r\n\r\n        } else {\r\n            dispatch(finishChecking())\r\n\r\n        }\r\n\r\n\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<Spinner />)\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/login\"\r\n                        exact\r\n                        component={Login}\r\n                        isAuth={user}>\r\n\r\n                    </PublicRoute>\r\n\r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        exact\r\n                        component={CalendarScreen}\r\n                        isAuth={user}>\r\n\r\n                    </PrivateRoute>\r\n\r\n                    <Redirect to=\"/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    user: false\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                user: action.payload\r\n\r\n            }\r\n        case types.authUnSetChecking:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n\r\n            }\r\n\r\n        case types.authLogOut:\r\n            return {\r\n                checking: false,\r\n                user: false\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from '../types/types'\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n    onSlotSelected: false\r\n}\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.setActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventLoadEvents:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.unSetActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => (e.uid === action.payload.uid) ? action.payload : e)\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.uid !== state.activeEvent.uid),\r\n                activeEvent: null\r\n            }\r\n        case types.onselectSlot:\r\n            return {\r\n                ...state,\r\n                onSlotSelected: action.payload\r\n            }\r\n        case types.unSetOnselectSlot:\r\n            return {\r\n                ...state,\r\n                onSlotSelected: false\r\n            }\r\n\r\n        case types.calendarCleaner:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n    uiError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.modalOpen:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.modalClose:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        case types.authUiError:\r\n            return {\r\n                ...state,\r\n                uiError: action.payload\r\n\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk)))","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport '../src/styles/styles.css'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nReactDOM.render(\n    <CalendarApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}